// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PaymentService.Persistance.Context;

#nullable disable

namespace PaymentService.Persistance.Migrations
{
    [DbContext(typeof(PaymentDbContext))]
    partial class PaymentDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PaymentService.Domain.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Amount")
                        .HasColumnType("real")
                        .HasColumnName("Amount");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedTime");

                    b.Property<DateTime?>("DeletedTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("DeletedTime");

                    b.Property<string>("ErrorUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ErrorUrl");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("int")
                        .HasColumnName("PaymentStatus");

                    b.Property<string>("SuccessUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SuccessUrl");

                    b.Property<int>("TenantId")
                        .HasColumnType("int")
                        .HasColumnName("TenantId");

                    b.HasKey("Id");

                    b.ToTable("Payments", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 10f,
                            CreatedTime = new DateTime(2023, 5, 29, 23, 44, 37, 171, DateTimeKind.Utc).AddTicks(91),
                            ErrorUrl = "www.deneme.com/erroUrl",
                            IsDeleted = false,
                            PaymentStatus = 2,
                            SuccessUrl = "www.boracetin.com/successUrl",
                            TenantId = 1
                        },
                        new
                        {
                            Id = 2,
                            Amount = 20f,
                            CreatedTime = new DateTime(2023, 5, 29, 23, 44, 37, 171, DateTimeKind.Utc).AddTicks(100),
                            ErrorUrl = "www.deneme.com/erroUrl",
                            IsDeleted = false,
                            PaymentStatus = 3,
                            SuccessUrl = "www.admin.com/successUrl",
                            TenantId = 1
                        },
                        new
                        {
                            Id = 3,
                            Amount = 30f,
                            CreatedTime = new DateTime(2023, 5, 29, 23, 44, 37, 171, DateTimeKind.Utc).AddTicks(101),
                            ErrorUrl = "www.deneme.com/erroUrl",
                            IsDeleted = false,
                            PaymentStatus = 1,
                            SuccessUrl = "www.pinar.com/successUrl",
                            TenantId = 1
                        },
                        new
                        {
                            Id = 4,
                            Amount = 40f,
                            CreatedTime = new DateTime(2023, 5, 29, 23, 44, 37, 171, DateTimeKind.Utc).AddTicks(102),
                            ErrorUrl = "www.deneme.com/erroUrl",
                            IsDeleted = false,
                            PaymentStatus = 4,
                            SuccessUrl = "www.selma.com/successUrl",
                            TenantId = 1
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
